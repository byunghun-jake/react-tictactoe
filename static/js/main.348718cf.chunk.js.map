{"version":3,"sources":["index.js"],"names":["Square","value","onClick","className","Board","i","this","props","squares","renderSquare","React","Component","Game","handleClick","state","stepNumber","xIsNext","history","slice","length","calculateWinner","alert","setState","concat","jumpTo","step","Array","fill","console","log","status","winner","moves","map","move","desc","line","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.348718cf.chunk.js","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\n\n// class Square extends React.Component {\n//   render() {\n//     return (\n//       <button className=\"square\" onClick={() => this.props.onClick()}>\n//         {this.props.value}\n//       </button>\n//     )\n//   }\n// }\n\nconst Square = ({ value, onClick }) => {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  )\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n        },\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n    }\n  }\n\n  handleClick = (i) => {\n    const { stepNumber, xIsNext } = this.state\n    const history = this.state.history.slice(0, stepNumber + 1)\n    const squares = history[history.length - 1].squares.slice()\n    // 이미 게임이 끝났다면?\n    // 이미 눌렀던 버튼이라면?\n    if (calculateWinner(squares) || squares[i]) {\n      alert(\"삐빗!\")\n      return null\n    }\n    squares[i] = xIsNext ? \"X\" : \"O\"\n    this.setState({\n      history: history.concat([\n        {\n          squares,\n        },\n      ]),\n      stepNumber: history.length,\n      xIsNext: !xIsNext,\n    })\n  }\n\n  jumpTo = (step) => {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    })\n  }\n\n  render() {\n    const { history, xIsNext, stepNumber } = this.state\n    console.log(history)\n    console.log(stepNumber)\n    const { squares } = history[stepNumber]\n    const winner = calculateWinner(squares)\n\n    //\n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move #${move}` : \"Go to game start\"\n      console.log(desc)\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      )\n    })\n\n    let status\n    if (winner) {\n      status = `Winner is ${winner}`\n    } else {\n      status = `Next player: ${xIsNext ? \"X\" : \"O\"}`\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={squares}\n            onClick={(i) => this.handleClick(i)}\n            xIsNext={xIsNext}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n  for (let line of lines) {\n    const [a, b, c] = line\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a]\n    }\n  }\n  return null\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"))\n"],"sourceRoot":""}